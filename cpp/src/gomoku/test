#include <iostream>
#include <vector>
#include "board.hpp" // Adjust the include path as needed

int main() {
    // Example board data (a 19x19 board; here we'll use a smaller one for brevity)
    std::vector<std::vector<char> > board_data(BOARD_SIZE, std::vector<char>(BOARD_SIZE, '.'));
    // For example, set one cell to 'X'
    board_data[12][9] = 'X';

    // Create a Board instance:
    // Parameters: board_data, goal, last_stone, next_stone, last_score, next_score
    Board board(board_data, 5, "X", "O", 0, 0);

    std::cout << "Initial Board:\n" << board.convert_board_for_print() << std::endl;

    // Get cached diagonals (this will compute and cache them)
    const std::vector<std::vector<int> >& diag_down = board.get_all_downward_diagonals();
    const std::vector<std::vector<int> >& diag_up = board.get_all_upward_diagonals();

    // Print one of the downward diagonals for demonstration
    std::cout << "Downward diagonal 0:" << std::endl;
    if (!diag_down.empty()) {
        for (size_t i = 0; i < diag_down[BOARD_SIZE / 2].size(); ++i)
            std::cout << diag_down[BOARD_SIZE / 2][i] << " ";
        std::cout << std::endl;
    }

    return 0;
}
